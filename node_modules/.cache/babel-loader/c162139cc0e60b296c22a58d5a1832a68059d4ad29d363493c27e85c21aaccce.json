{"ast":null,"code":"var _jsxFileName = \"/Users/elsasvardstrom/Desktop/Code/mattespelet/mattequiz/src/components/TableMultiplication.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TableMultiplication = () => {\n  _s();\n  const [table, setTable] = useState(null);\n  const [i, setI] = useState(0);\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const totalRounds = 10;\n  const startGame = selectedTable => {\n    setTable(selectedTable);\n    setI(0);\n    setScore(0);\n    setUserAnswer(\"\");\n  };\n  const checkAnswer = () => {\n    if (table === null || i >= totalRounds) return;\n    if (parseInt(userAnswer) === table * (i + 1)) {\n      setScore(prev => prev + 1);\n    }\n    setUserAnswer(\"\"); // Rensa input\n\n    // Gå till nästa fråga eller avsluta spelet\n    if (i < totalRounds - 1) {\n      setI(prev => prev + 1);\n    } else {\n      setTable(null); // Gå tillbaka till meny\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: !table ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"V\\xE4lj en multiplikationstabell:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), [...Array(10)].map((_, num) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => startGame(num + 1),\n        children: [\"Tabell \", num + 1]\n      }, num + 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Fr\\xE5ga \", i + 1, \"/\", totalRounds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [table, \" \\xD7 \", i + 1, \" = ?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: userAnswer,\n        onChange: e => setUserAnswer(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && checkAnswer()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkAnswer,\n        children: \"Svara\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Po\\xE4ng: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(TableMultiplication, \"hgxNr90YkCA6OrPV/oRf6ENIbaU=\");\n_c = TableMultiplication;\nexport default TableMultiplication;\nvar _c;\n$RefreshReg$(_c, \"TableMultiplication\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TableMultiplication","_s","table","setTable","i","setI","userAnswer","setUserAnswer","score","setScore","totalRounds","startGame","selectedTable","checkAnswer","parseInt","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","map","_","num","onClick","type","value","onChange","e","target","onKeyDown","key","_c","$RefreshReg$"],"sources":["/Users/elsasvardstrom/Desktop/Code/mattespelet/mattequiz/src/components/TableMultiplication.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ninterface TableMultiplicationProps {\n  data: any[];\n}\n\nconst TableMultiplication: React.FC<TableMultiplicationProps> = () => {\n  const [table, setTable] = useState<number | null>(null);\n  const [i, setI] = useState<number>(0);\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const totalRounds = 10;\n\n  const startGame = (selectedTable: number) => {\n    setTable(selectedTable);\n    setI(0);\n    setScore(0);\n    setUserAnswer(\"\");\n  };\n\n  const checkAnswer = () => {\n    if (table === null || i >= totalRounds) return;\n\n    if (parseInt(userAnswer) === table * (i + 1)) {\n      setScore((prev) => prev + 1);\n    }\n\n    setUserAnswer(\"\"); // Rensa input\n\n    // Gå till nästa fråga eller avsluta spelet\n    if (i < totalRounds - 1) {\n      setI((prev) => prev + 1);\n    } else {\n      setTable(null); // Gå tillbaka till meny\n    }\n  };\n\n  return (\n    <div className=\"game-container\">\n      {!table ? (\n        <div>\n          <h2>Välj en multiplikationstabell:</h2>\n          {[...Array(10)].map((_, num) => (\n            <button key={num + 1} onClick={() => startGame(num + 1)}>\n              Tabell {num + 1}\n            </button>\n          ))}\n        </div>\n      ) : (\n        <>\n          <h2>Fråga {i + 1}/{totalRounds}</h2>\n          <p>{table} × {i + 1} = ?</p>\n          <input\n            type=\"number\"\n            value={userAnswer}\n            onChange={(e) => setUserAnswer(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && checkAnswer()}\n          />\n          <button onClick={checkAnswer}>Svara</button>\n          <p>Poäng: {score}</p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TableMultiplication;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}