{"ast":null,"code":"var _jsxFileName = \"/Users/elsasvardstrom/Desktop/Code/project/src/components/MultiplicationGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MultiplicationGame = ({\n  data\n}) => {\n  _s();\n  const [num1, setNum1] = useState(1);\n  const [num2, setNum2] = useState(1);\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [round, setRound] = useState(1);\n  const [message, setMessage] = useState(\"\");\n  const totalRounds = 10;\n  const getRandomNumbers = () => {\n    if (data.length > 1) {\n      var _data$index1$num, _data$index, _data$index2$num, _data$index2;\n      // Se till att det finns minst tv√• rader att v√§lja fr√•n\n      let index1 = Math.floor(Math.random() * data.length);\n      let index2 = Math.floor(Math.random() * data.length);\n      const newNum1 = (_data$index1$num = (_data$index = data[index1]) === null || _data$index === void 0 ? void 0 : _data$index.num1) !== null && _data$index1$num !== void 0 ? _data$index1$num : 1;\n      const newNum2 = (_data$index2$num = (_data$index2 = data[index2]) === null || _data$index2 === void 0 ? void 0 : _data$index2.num2) !== null && _data$index2$num !== void 0 ? _data$index2$num : 1;\n      setNum1(newNum1);\n      setNum2(newNum2);\n    }\n  };\n  useEffect(() => {\n    if (data.length > 0 && num1 === null && num2 === null) {\n      getRandomNumbers();\n    }\n  }, [data]);\n  const checkAnswer = () => {\n    if (num1 === null || num2 === null) return;\n    const correctAnswer = num1 * num2;\n    if (parseInt(userAnswer) === correctAnswer) {\n      setScore(score + 1);\n      setMessage(\"‚úÖ R√§tt svar!\");\n    } else {\n      setMessage(`‚ùå Fel! R√§tt svar var ${correctAnswer}`);\n    }\n    if (round < totalRounds) {\n      setRound(round + 1);\n      getRandomNumbers();\n      setUserAnswer(\"\");\n    } else {\n      // Spelet √§r slut\n      setMessage(`üéâ Spelet √§r slut! Du fick ${score + (parseInt(userAnswer) === correctAnswer ? 1 : 0)} av ${totalRounds} r√§tt.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mult-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MULTIM\\xC4STAREN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: round <= totalRounds ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Fr\\xE5ga \", round, \"/\", totalRounds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [num1, \" \\xD7 \", num2, \" = ?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: userAnswer,\n          onChange: e => setUserAnswer(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && checkAnswer()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: checkAnswer,\n          children: \"Svara\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n_s(MultiplicationGame, \"UgH8A8W0Nr1RVdgMvAvZwZNJ51c=\");\n_c = MultiplicationGame;\nexport default MultiplicationGame;\nvar _c;\n$RefreshReg$(_c, \"MultiplicationGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","MultiplicationGame","data","_s","num1","setNum1","num2","setNum2","userAnswer","setUserAnswer","score","setScore","round","setRound","message","setMessage","totalRounds","getRandomNumbers","length","_data$index1$num","_data$index","_data$index2$num","_data$index2","index1","Math","floor","random","index2","newNum1","newNum2","checkAnswer","correctAnswer","parseInt","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["/Users/elsasvardstrom/Desktop/Code/project/src/components/MultiplicationGame.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\ninterface MultiplicationGameProps {\n  data: any[];\n}\n\nconst MultiplicationGame: React.FC<MultiplicationGameProps> = ({ data }) => {\n  const [num1, setNum1] = useState(1);\n  const [num2, setNum2] = useState(1);\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [round, setRound] = useState(1);\n  const [message, setMessage] = useState(\"\");\n\n  const totalRounds = 10;\n\n  const getRandomNumbers = () => {\n    if (data.length > 1) { // Se till att det finns minst tv√• rader att v√§lja fr√•n\n      let index1 = Math.floor(Math.random() * data.length);\n      let index2 = Math.floor(Math.random() * data.length);\n\n      const newNum1 = data[index1]?.num1 ?? 1;\n      const newNum2 = data[index2]?.num2 ?? 1;\n\n      setNum1(newNum1);\n      setNum2(newNum2);\n    }\n  };\n  useEffect(() => {\n    if (data.length > 0 && num1 === null && num2 === null) {\n      getRandomNumbers();\n    }\n  }, [data]);\n\n  const checkAnswer = () => {\n    if (num1 === null || num2 === null) return;\n    \n    const correctAnswer = num1 * num2;\n    if (parseInt(userAnswer) === correctAnswer) {\n      setScore(score + 1);\n      setMessage(\"‚úÖ R√§tt svar!\");\n    } else {\n      setMessage(`‚ùå Fel! R√§tt svar var ${correctAnswer}`);\n    }\n\n    if (round < totalRounds) {\n      setRound(round + 1);\n      getRandomNumbers();\n      setUserAnswer(\"\");\n    } else {\n      // Spelet √§r slut\n      setMessage(`üéâ Spelet √§r slut! Du fick ${score + (parseInt(userAnswer) === correctAnswer ? 1 : 0)} av ${totalRounds} r√§tt.`);\n    }\n  };\n  return (\n    <><>\n          <div className=\"mult-container\">\n              <h1>MULTIM√ÑSTAREN</h1>\n          </div>\n      </><div className=\"game-container\">\n              {round <= totalRounds ? (\n                  <>\n                      <p>Fr√•ga {round}/{totalRounds}</p>\n                      <p>{num1} √ó {num2} = ?</p>\n                      <input\n                          type=\"number\"\n                          value={userAnswer}\n                          onChange={(e) => setUserAnswer(e.target.value)}\n                          onKeyDown={(e) => e.key === \"Enter\" && checkAnswer()} />\n                      <button onClick={checkAnswer}>Svara</button>\n                      <p>{message}</p>\n                  </>\n              ) : (\n                  <h2>{message}</h2>\n              )}\n          </div></>\n  );\n};\n\nexport default MultiplicationGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}