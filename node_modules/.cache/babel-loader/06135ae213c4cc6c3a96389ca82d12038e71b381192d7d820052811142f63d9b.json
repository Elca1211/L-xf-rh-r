{"ast":null,"code":"var _jsxFileName = \"/Users/elsasvardstrom/Desktop/Code/project/src/components/TableMultiplication.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TableMultiplication = ({\n  data\n}) => {\n  _s();\n  const [table, setTable] = useState(null);\n  const [num1, setNum1] = useState(null);\n  const [num2, setNum2] = useState(null);\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [round, setRound] = useState(1);\n  const totalRounds = 10;\n  const [gameOver, setGameOver] = useState(false);\n\n  // N√§r anv√§ndaren v√§ljer en tabell, starta spelet\n  const startGame = selectedTable => {\n    setTable(selectedTable);\n    setRound(1);\n    setScore(0);\n    setMessage(\"\");\n    setGameOver(false);\n    getRandomNumbers(selectedTable);\n  };\n\n  // Slumpar en rad och tar r√§tt tabellkolumn\n  const getRandomNumbers = selectedTable => {\n    if (data.length >= 10) {\n      const randomIndex = Math.floor(Math.random() * 10); // Begr√§nsa till index 0-9\n      const row = data[randomIndex];\n      setNum1(row.num1);\n      setNum2(selectedTable); // H√§mtar r√§tt multiplikationstabell\n    }\n  };\n  const checkAnswer = () => {\n    if (num1 === null || num2 === null) return;\n    const correctAnswer = num1 * (table !== null && table !== void 0 ? table : 1);\n    if (parseInt(userAnswer) === correctAnswer) {\n      setScore(score + 1);\n      setMessage(\"‚úÖ R√§tt svar!\");\n    } else {\n      setMessage(`‚ùå Fel! R√§tt svar var ${correctAnswer}`);\n      setGameOver(true);\n    }\n    if (round < totalRounds) {\n      setRound(round + 1);\n      getRandomNumbers(table !== null && table !== void 0 ? table : 1);\n      setUserAnswer(\"\");\n    } else {\n      setMessage(`üéâ Spelet √§r slut! Du fick ${score + (parseInt(userAnswer) === correctAnswer ? 1 : 0)} av ${totalRounds} r√§tt.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-exercise-container\",\n    children: !table ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"V\\xE4lj en multiplikationstabell:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), Array.from({\n        length: 11\n      }, (_, num) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => startGame(num),\n        children: num\n      }, num, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : round <= totalRounds ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Fr\\xE5ga \", round, \"/\", totalRounds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), num1 !== null && num2 !== null ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [num1, \" \\xD7 \", table, \" = ?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u23F3 Laddar fr\\xE5ga...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: userAnswer,\n        onChange: e => setUserAnswer(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && checkAnswer()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkAnswer,\n        children: \"Svara\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Po\\xE4ng: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(TableMultiplication, \"ELZjFmJULS5HaH2K6e7GAf+ejOo=\");\n_c = TableMultiplication;\nexport default TableMultiplication;\nvar _c;\n$RefreshReg$(_c, \"TableMultiplication\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TableMultiplication","data","_s","table","setTable","num1","setNum1","num2","setNum2","userAnswer","setUserAnswer","message","setMessage","score","setScore","round","setRound","totalRounds","gameOver","setGameOver","startGame","selectedTable","getRandomNumbers","length","randomIndex","Math","floor","random","row","checkAnswer","correctAnswer","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","_","num","onClick","type","value","onChange","e","target","onKeyDown","key","_c","$RefreshReg$"],"sources":["/Users/elsasvardstrom/Desktop/Code/project/src/components/TableMultiplication.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\ninterface MultiplicationGameProps {\n  data: any[];\n}\n\nconst TableMultiplication: React.FC<MultiplicationGameProps> = ({ data }) => {\n  const [table, setTable] = useState<number | null>(null);\n  const [num1, setNum1] = useState<number | null>(null);\n  const [num2, setNum2] = useState<number | null>(null);\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [round, setRound] = useState(1);\n  const totalRounds = 10;\n  const [gameOver, setGameOver] = useState(false); \n\n  // N√§r anv√§ndaren v√§ljer en tabell, starta spelet\n  const startGame = (selectedTable: number) => {\n    setTable(selectedTable);\n    setRound(1);\n    setScore(0);\n    setMessage(\"\");\n    setGameOver(false);\n    getRandomNumbers(selectedTable);\n  };\n\n  // Slumpar en rad och tar r√§tt tabellkolumn\n  const getRandomNumbers = (selectedTable: number) => {\n    if (data.length >= 10) {\n      const randomIndex = Math.floor(Math.random() * 10); // Begr√§nsa till index 0-9\n      const row = data[randomIndex];\n\n      setNum1(row.num1);\n      setNum2(selectedTable); // H√§mtar r√§tt multiplikationstabell\n    }\n  };\n\n  const checkAnswer = () => {\n    if (num1 === null || num2 === null) return;\n\n    const correctAnswer = num1 * (table ?? 1);\n    if (parseInt(userAnswer) === correctAnswer) {\n      setScore(score + 1);\n      setMessage(\"‚úÖ R√§tt svar!\");\n    } else {\n      setMessage(`‚ùå Fel! R√§tt svar var ${correctAnswer}`);\n      setGameOver(true);\n    }\n\n    if (round < totalRounds) {\n      setRound(round + 1);\n      getRandomNumbers(table ?? 1);\n      setUserAnswer(\"\");\n    } else {\n      setMessage(`üéâ Spelet √§r slut! Du fick ${score + (parseInt(userAnswer) === correctAnswer ? 1 : 0)} av ${totalRounds} r√§tt.`);\n    }\n  };\n\n  return (\n    <div className=\"table-exercise-container\">\n      {!table ? (\n        <div>\n          <h2>V√§lj en multiplikationstabell:</h2>\n          {Array.from({ length: 11 }, (_, num) => (\n            <button key={num} onClick={() => startGame(num)}>{num}</button>\n            ))}\n        </div>\n      ) : round <= totalRounds ? (\n        <>\n          <h2>Fr√•ga {round}/{totalRounds}</h2>\n          {num1 !== null && num2 !== null ? (\n            <p>{num1} √ó {table} = ?</p>\n          ) : (\n            <p>‚è≥ Laddar fr√•ga...</p>\n          )}\n\n          <input\n            type=\"number\"\n            value={userAnswer}\n            onChange={(e) => setUserAnswer(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && checkAnswer()} \n          />\n          <button onClick={checkAnswer}>Svara</button>\n          <p>{message}</p>\n          <p>Po√§ng: {score}</p>\n        </>\n      ) : (\n        <h2>{message}</h2>\n      )}\n    </div>\n  );\n};\n\nexport default TableMultiplication;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}