{"ast":null,"code":"var _jsxFileName = \"/Users/elsasvardstrom/Desktop/Code/mattespelet/mattequiz/src/components/TableMultiplication.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TableMultiplication = ({\n  data\n}) => {\n  _s();\n  const [table, setTable] = useState(null);\n  const [i, setI] = useState(0);\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const totalRounds = 10;\n  const [gameOver, setGameOver] = useState(false);\n  const startGame = selectedTable => {\n    setTable(selectedTable);\n    setI(0);\n    setScore(0);\n    setMessage(\"\");\n    setGameOver(false);\n    setUserAnswer(\"\");\n  };\n  const checkAnswer = () => {\n    if (table === null || i >= totalRounds) return;\n    const correctAnswer = table * (i + 1);\n    if (parseInt(userAnswer) === correctAnswer) {\n      setScore(prev => prev + 1);\n      setMessage(\"‚úÖ R√§tt svar!\");\n    } else {\n      setMessage(`‚ùå Fel! R√§tt svar var ${correctAnswer}`);\n    }\n    setUserAnswer(\"\"); // Rensa input\n\n    if (i < totalRounds - 1) {\n      setI(prev => prev + 1);\n    } else {\n      setGameOver(true);\n    }\n  };\n  const restartGame = () => {\n    setTable(null);\n    setScore(0);\n    setI(0);\n    setMessage(\"\");\n    setGameOver(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: !table ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"V\\xE4lj en multiplikationstabell:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), [...Array(10)].map((_, num) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => startGame(num + 1),\n        children: [\"Tabell \", num + 1]\n      }, num + 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDFAE Game Over! \\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Du fick \", score, \" av \", totalRounds, \" r\\xE4tt.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartGame,\n        children: \"\\uD83D\\uDD04 Spela igen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Fr\\xE5ga \", i + 1, \"/\", totalRounds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [table, \" \\xD7 \", i + 1, \" = ?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: userAnswer,\n        onChange: e => setUserAnswer(e.target.value),\n        onKeyDown: e => {\n          if (e.key === \"Enter\") {\n            e.preventDefault();\n            checkAnswer();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkAnswer,\n        children: \"Svara\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Po\\xE4ng: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(TableMultiplication, \"rAqm3DGrlU2ORnrToum/LkeSH/0=\");\n_c = TableMultiplication;\nexport default TableMultiplication;\nvar _c;\n$RefreshReg$(_c, \"TableMultiplication\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TableMultiplication","data","_s","table","setTable","i","setI","userAnswer","setUserAnswer","message","setMessage","score","setScore","totalRounds","gameOver","setGameOver","startGame","selectedTable","checkAnswer","correctAnswer","parseInt","prev","restartGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","map","_","num","onClick","type","value","onChange","e","target","onKeyDown","key","preventDefault","_c","$RefreshReg$"],"sources":["/Users/elsasvardstrom/Desktop/Code/mattespelet/mattequiz/src/components/TableMultiplication.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\ninterface TableMultiplicationProps {\n  data: any[];\n}\n\nconst TableMultiplication: React.FC<TableMultiplicationProps> = ({data}) => {\n  const [table, setTable] = useState<number | null>(null);\n  const [i, setI] = useState<number>(0);\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const totalRounds = 10;\n  const [gameOver, setGameOver] = useState(false);\n\n  const startGame = (selectedTable: number) => {\n    setTable(selectedTable);\n    setI(0);\n    setScore(0);\n    setMessage(\"\");\n    setGameOver(false);\n    setUserAnswer(\"\");\n  };\n\n  const checkAnswer = () => {\n    if (table === null || i >= totalRounds) return;\n\n    const correctAnswer = table * (i + 1);\n    if (parseInt(userAnswer) === correctAnswer) {\n      setScore((prev) => prev + 1);\n      setMessage(\"‚úÖ R√§tt svar!\");\n    } else {\n      setMessage(`‚ùå Fel! R√§tt svar var ${correctAnswer}`);\n    }\n\n    setUserAnswer(\"\"); // Rensa input\n\n    if (i < totalRounds - 1) {\n      setI((prev) => prev + 1);\n    } else {\n      setGameOver(true);\n    }\n  };\n\n  const restartGame = () => {\n    setTable(null);\n    setScore(0);\n    setI(0);\n    setMessage(\"\");\n    setGameOver(false);\n  };\n\n  return (\n    <div className=\"game-container\">\n      {!table ? (\n        <div>\n          <h2>V√§lj en multiplikationstabell:</h2>\n          {[...Array(10)].map((_, num) => (\n            <button key={num + 1} onClick={() => startGame(num + 1)}>\n              Tabell {num + 1}\n            </button>\n          ))}\n        </div>\n      ) : gameOver ? (\n        <div className=\"game-over\">\n          <h2>üéÆ Game Over! üéâ</h2>\n          <p>Du fick {score} av {totalRounds} r√§tt.</p>\n          <button onClick={restartGame}>üîÑ Spela igen</button>\n        </div>\n      ) : (\n        <>\n          <h2>Fr√•ga {i + 1}/{totalRounds}</h2>\n          <p>{table} √ó {i + 1} = ?</p>\n\n          <input\n            type=\"number\"\n            value={userAnswer}\n            onChange={(e) => setUserAnswer(e.target.value)}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\") {\n                e.preventDefault();\n                checkAnswer();\n              }\n            }}\n          />\n          <button onClick={checkAnswer}>Svara</button>\n          <p>{message}</p>\n          <p>Po√§ng: {score}</p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TableMultiplication;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}